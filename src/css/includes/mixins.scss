/*

PIXELS  EMS
-------------
95
82
59
50
37
32
23
18
13
11
9
7

*/

@mixin box-shadow($shadow1, $shadow2: false, $shadow3: false, $shadow4: false, $shadow5: false) {

	$params: $shadow1;

	@if $shadow2 { 
		$params: $shadow1, $shadow2;
	}
	@if $shadow3 != false { 
		$params: $shadow1, $shadow2, $shadow3; 
	}
	@if $shadow4 != false {
		$params: $shadow1, $shadow2, $shadow3, $shadow4;
	}
	@if $shadow5 != false {
		$params: $shadow1, $shadow2, $shadow3, $shadow4, $shadow5;
	}

	-webkit-box-shadow: $params;
	-moz-box-shadow: $params;
	box-shadow: $params;
}
@mixin border-radius($value){
	-webkit-border-radius: $value;
	-moz-border-radius: $value;
	border-radius: $value;
}
@mixin border-top-left-radius($value){
	-webkit-border-top-left-radius: $value;
	-moz-border-radius-topleft: $value;
	border-top-left-radius: $value;
}
@mixin border-top-right-radius($value){
	-webkit-border-top-right-radius: $value;
	-moz-border-radius-topright: $value;
	border-top-right-radius: $value;
}
@mixin border-bottom-left-radius($value){
	-webkit-border-bottom-left-radius: $value;
	-moz-border-radius-bottomleft: $value;
	border-bottom-left-radius: $value;
}
@mixin border-bottom-right-radius($value){
	-webkit-border-bottom-right-radius: $value;
	-moz-border-radius-bottomright: $value;
	border-bottom-right-radius: $value;
}

@mixin transform($transforms){
	-moz-transform: $transforms;
	-o-transform: $transforms;
	-ms-transform: $transforms;
	-webkit-transform: $transforms;
	transform: $transforms;
}

@mixin rotate($deg){
	@include transform(rotate(#{$deg}deg));
}

@mixin scale($scale){
	@include transform(scale($scale));
} 

@mixin translate($x, $y){
	@include transform(translate($x, $y));
}

@mixin skew($x, $y){
	@include transform(skew(#{$x}deg, #{$y}deg));
}

@mixin transform-origin($origin) {
	moz-transform-origin: $origin;
	-o-transform-origin: $origin;
	-ms-transform-origin: $origin;
	-webkit-transform-origin: $origin;
	transform-origin: $origin;
}

@mixin tt-arrow-top {
	bottom: 100%;
	left: 50%;
	border: solid transparent;
	content: " ";
	height: 0;
	width: 0;
	position: absolute;
	pointer-events: none;
	border-color: $b60;
	border-bottom-color: $b60;
	border-width: 10px;
	margin-left: -10px;
}
@mixin tt-arrow-bottom {
	top: 100%;
	left: 50%;
	border: solid transparent;
	content: " ";
	height: 0;
	width: 0;
	position: absolute;
	pointer-events: none;
	border-color: rgba(255, 255, 255, 0);
	border-top-color: #fff;
	border-width: 10px;
	margin-left: -10px;
}
@mixin tt-arrow-right {
	top: 100%;
	left: 50%;
	border: solid transparent;
	content: " ";
	height: 0;
	width: 0;
	position: absolute;
	pointer-events: none;
	border-color: rgba(255, 255, 255, 0);
	border-top-color: #fff;
	border-width: 10px;
	margin-top: -10px;	
}
@mixin linear-gradient($fromColor, $toColor) {
	background-color: $toColor; /* Fallback Color */
	background-image: -webkit-gradient(linear, left top, left bottom, from($fromColor), to($toColor)); /* Saf4+, Chrome */
	background-image: -webkit-linear-gradient(top, $fromColor, $toColor); /* Chrome 10+, Saf5.1+, iOS 5+ */
	background-image:    -moz-linear-gradient(top, $fromColor, $toColor); /* FF3.6 */
	background-image:     -ms-linear-gradient(top, $fromColor, $toColor); /* IE10 */
	background-image:      -o-linear-gradient(top, $fromColor, $toColor); /* Opera 11.10+ */
	background-image:         linear-gradient(top, $fromColor, $toColor);
	filter: progid:DXImageTransform.Microsoft.gradient(GradientType=0,StartColorStr='#{$fromColor}', EndColorStr='#{$toColor}');
}

// Helpers

.ts10 {
	-webkit-transition: 0.1s ease all;
	-moz-transition: 0.1s ease all;
	transition: 0.1s ease all;
}
.ts15 {
	-webkit-transition: 0.15s ease all;
	-moz-transition: 0.15s ease all;
	transition: 0.15s ease all;
}
.ts20 {
	-webkit-transition: 0.2s ease all;
	-moz-transition: 0.2s ease all;
	transition: 0.2s ease all;
}
.ts30 {
	-webkit-transition: 0.3s ease all;
	-moz-transition: 0.3s ease all;
	transition: 0.3s ease all;
}

// Place the .ts15in, UNDER THE .visible CLASS
// .ts15out should be under the "parent" class
// Follows Material Design (animation) principles, GOOGLE (TM)

.tsin {
	-webkit-transition: all 300ms cubic-bezier(0.1, 0.885, 0.2, 1.1);
	-moz-transition: all 300ms cubic-bezier(0.1, 0.885, 0.2, 1.1);
	transition: all 300ms cubic-bezier(0.1, 0.885, 0.07, 1.09);
}
.tsout {
	-webkit-transition: all 150ms cubic-bezier(0.895, 0.03, 0.685, 0.22);
	-moz-transition: all 150ms cubic-bezier(0.895, 0.03, 0.685, 0.22);
	transition: all 150ms cubic-bezier(0.895, 0.03, 0.685, 0.22);
}



.cf:before, .cf:after {
	content: " ";
	display: table;
}
.cf:after {
	clear: both;
}
.cf {
	*zoom: 1;
}
.ns {
	-webkit-touch-callout: none;
	-webkit-user-select: none;
	-khtml-user-select: none;
	-moz-user-select: none;
	-ms-user-select: none;
	user-select: none;
	outline-style:none;
}
.opensans {
	font-family: 'Open Sans', sans-serif;
}
.playfair {
	font-family: 'Playfair Display', serif;
}
input, textarea {
	outline: none;
	margin: 0;
	border: 0;
	background: transparent;
	-webkit-box-sizing: border-box;
	-moz-box-sizing: border-box;
	box-sizing: border-box;
}